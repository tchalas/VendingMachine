/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'eclipse'
mainClassName = "app.App"

version = '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.

    // Use JUnit test framework
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.14'
    compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.22.2'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: '2.25.1'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.3.v20170317'
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.3.v20170317'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'VendingJar',
                'Implementation-Version': version,
                'Main-Class': 'app.App'    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}